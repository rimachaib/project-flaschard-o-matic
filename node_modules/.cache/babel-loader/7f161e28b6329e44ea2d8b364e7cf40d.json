{"ast":null,"code":"var _jsxFileName = \"/Users/rimaatwork/Desktop/qualified-projects/Project_Flashcards_Qualified_1/src/Layout/Study.js\",\n    _s = $RefreshSig$();\n\n//The Study screen is displayed at /decks/:deckId/study.\n//You must use the readDeck() function from src/utils/api/index.js to load the deck that is being studied.\n//There is a breadcrumb navigation bar with links to home /, followed by the name of the deck being studied and finally the text Study (e.g., Home/Rendering In React/Study).\n//The deck title (i.e., \"Study: Rendering in React\" ) is shown on the screen.\n//Cards are shown one at a time, front-side first.\n//A button at the bottom of each card \"flips\" it to the other side.\n//After flipping the card, the screen shows a next button (see the \"Next button\" section below) to continue to the next card.\n//After the final card in the deck has been shown, a message (see the \"Restart prompt\" section below) is shown offering the user the opportunity to restart the deck.\n//If the user does not restart the deck, they should return to the home screen.\n//Studying a deck with two or fewer cards should display a \"Not enough cards\" message (see the \"Not enough cards\" section below) and a button to add cards to the deck\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport ErrorMessage from \"../Layout/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Study = () => {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const [error, setError] = useState(undefined);\n  const [flipped, setFlipped] = useState(false);\n  const [cardIndex, setCardIndex] = useState(0);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getDeck() {\n      try {\n        let data = await readDeck(deckId, abortController.signal);\n        setDeck(data);\n      } catch (err) {\n        setError(err);\n      }\n    }\n\n    getDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this);\n  }\n\n  function nextCard() {\n    if (cardIndex === deck.cards.length - 1) {\n      const result = window.confirm(\"Do you want to restart the deck?\");\n\n      if (result) {\n        setCardIndex(0);\n      }\n    } else {\n      setCardIndex(cardIndex + 1);\n    }\n\n    setFlipped(prevState => !prevState);\n  }\n\n  function flipCard() {\n    setFlipped(prevState => !prevState);\n  }\n\n  if (deck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"oi oi-home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 9\n              }, this), \" Home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            \"aria-current\": \"page\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/decks/${deck.id}`,\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12\",\n        children: deck.cards.length > 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: [\"Card \", cardIndex + 1, \" of \", deck.cards.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: !flipped ? `${deck.cards[cardIndex].front}` : `${deck.cards[cardIndex].back}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary m-2\",\n              onClick: flipCard,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"oi oi-action-redo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 10\n              }, this), \" Flip\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 9\n            }, this), flipped && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: nextCard,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"oi oi-arrow-thick-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 11\n              }, this), \" Next\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Not enough cards.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You need at least 3 cards to study. There are \", deck.cards.length, \" cards in this deck.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deck.id}/cards/new`,\n              className: \"btn btn-primary\",\n              children: \" Add Cards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this);\n  }\n};\n\n_s(Study, \"7uPzEDqf9ler1BRSKcTKW10OhV4=\", false, function () {\n  return [useParams];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/rimaatwork/Desktop/qualified-projects/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useEffect","useState","useParams","Link","readDeck","ErrorMessage","Study","deckId","deck","setDeck","cards","error","setError","undefined","flipped","setFlipped","cardIndex","setCardIndex","abortController","AbortController","getDeck","data","signal","err","abort","nextCard","length","result","window","confirm","prevState","flipCard","id","name","front","back"],"mappings":"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","sourcesContent":["//The Study screen is displayed at /decks/:deckId/study.\n//You must use the readDeck() function from src/utils/api/index.js to load the deck that is being studied.\n//There is a breadcrumb navigation bar with links to home /, followed by the name of the deck being studied and finally the text Study (e.g., Home/Rendering In React/Study).\n//The deck title (i.e., \"Study: Rendering in React\" ) is shown on the screen.\n//Cards are shown one at a time, front-side first.\n//A button at the bottom of each card \"flips\" it to the other side.\n//After flipping the card, the screen shows a next button (see the \"Next button\" section below) to continue to the next card.\n//After the final card in the deck has been shown, a message (see the \"Restart prompt\" section below) is shown offering the user the opportunity to restart the deck.\n//If the user does not restart the deck, they should return to the home screen.\n//Studying a deck with two or fewer cards should display a \"Not enough cards\" message (see the \"Not enough cards\" section below) and a button to add cards to the deck\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport ErrorMessage from \"../Layout/ErrorMessage\";\n\nexport const Study = () => {\n\tconst { deckId } = useParams();\n\tconst [deck, setDeck] = useState({ cards: [] });\n\tconst [error, setError] = useState(undefined);\n\tconst [flipped, setFlipped] = useState(false);\n\tconst [cardIndex, setCardIndex] = useState(0);\n\n\tuseEffect(() => {\n\t\tconst abortController = new AbortController();\n\t\tasync function getDeck() {\n\t\t\ttry {\n\t\t\t\tlet data = await readDeck(deckId, abortController.signal);\n\t\t\t\tsetDeck(data);\n\t\t\t} catch (err) {\n\t\t\t\tsetError(err);\n\t\t\t}\n\t\t}\n\t\tgetDeck();\n\t\treturn () => abortController.abort();\n\t}, [deckId]);\n\n\tif (error) {\n\t\treturn <ErrorMessage error={error} />;\n\t}\n\n\tfunction nextCard() {\n\t\tif (cardIndex === deck.cards.length - 1) {\n\t\t\tconst result = window.confirm(\"Do you want to restart the deck?\");\n\t\t\tif (result) {\n\t\t\t\tsetCardIndex(0);\n\t\t\t}\n\t\t} else {\n\t\t\tsetCardIndex(cardIndex + 1);\n\t\t}\n\t\tsetFlipped((prevState) => !prevState);\n\t}\n\n\tfunction flipCard() {\n\t\tsetFlipped((prevState) => !prevState);\n\t}\n\n\tif (deck) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<nav aria-label=\"breadcrumb\">\n\t\t\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t\t\t<li className=\"breadcrumb-item\">\n\t\t\t\t\t\t\t<a href=\"/\">\n\t\t\t\t\t\t\t\t<span className=\"oi oi-home\" /> Home\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"breadcrumb-item\" aria-current=\"page\">\n\t\t\t\t\t\t\t<a href={`/decks/${deck.id}`}>{deck.name}</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\n\t\t\t\t\t\t\tStudy\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t</nav>\n\t\t\t\t<h1>Study: {deck.name}</h1>\n\t\t\t\t<div className=\"col-sm-12\">\n\t\t\t\t\t{deck.cards.length > 2 ? (\n\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t<h5 className=\"card-title\">\n\t\t\t\t\t\t\t\t\tCard {cardIndex + 1} of {deck.cards.length}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t{!flipped\n\t\t\t\t\t\t\t\t\t\t? `${deck.cards[cardIndex].front}`\n\t\t\t\t\t\t\t\t\t\t: `${deck.cards[cardIndex].back}`}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary m-2\" onClick={flipCard}>\n\t\t\t\t\t\t\t\t\t<span className=\"oi oi-action-redo\" /> Flip\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{flipped && (\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={nextCard}>\n\t\t\t\t\t\t\t\t\t\t<span className=\"oi oi-arrow-thick-right\" /> Next\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>Not enough cards.</h3>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tYou need at least 3 cards to study. There are {deck.cards.length} cards in this deck.\n\t\t\t\t\t\t\t</p>\n                      <button type=\"button\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t<Link to={`/decks/${deck.id}/cards/new`} className=\"btn btn-primary\"> Add Cards\n\t\t\t\t\t\t\t</Link>\n                      </button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\nexport default Study;\n"]},"metadata":{},"sourceType":"module"}