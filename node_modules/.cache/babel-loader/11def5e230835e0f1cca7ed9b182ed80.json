{"ast":null,"code":"var _jsxFileName = \"/Users/rimaatwork/Desktop/qualified-projects/Project_Flashcards_Qualified_1/src/Layout/DeckList.js\",\n    _s = $RefreshSig$();\n\n//This component is rendered in the Home.js file\n//Show list of decks with options to create, study, view, or delete a deck\n//Existing decks are each shown with the deck name, the number of cards, and a “Study,” “View,” and “Delete” button.\n//useEffect hook will fire a function after every render and will allow us to fetch data\n//A dependency array can be passed into the useEffect as a second argument to make sure that the function only rns once on the first render\n//Clicking the “Study” button brings the user to the Study screen.\n//Clicking the “Edit” button brings the user to the Edit Deck screen.\n//Clicking the “Delete” button shows a warning message before deleting the deck.\n//The user can click \"OK\" or \"Cancel\". If the user clicks \"OK\", the deck is deleted and the deleted deck is no longer visible on the Home screen.\n//use useEffect hook to make an API call from a React component\nimport React, { useState, useEffect } from \"react\";\nimport { deleteDeck, listDecks } from \"../utils/api\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = () => {\n  _s();\n\n  const history = useHistory();\n  const [decks, setDecks] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getData() {\n      try {\n        let data = await listDecks(abortController.signal);\n        setDecks(data);\n      } catch (err) {\n        setError(err);\n      }\n    }\n\n    getData();\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (decks) {\n    const list = decks.map(deck => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-8\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: deck.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-end\",\n                children: `${deck.cards.length} cards`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}`,\n            className: \"btn btn-secondary mr-2\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}/study`,\n            className: \"btn btn-primary mr-2\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: async () => {\n              const result = window.confirm(\"Delete this deck? \\nYou will not be able to recover it.\");\n\n              if (result) {\n                deleteDeck(deck.id).then(history.push(\"/\"));\n              }\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)\n      }, deck.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"decks/new\",\n          className: \"btn btn-secondary m-3\",\n          children: \"Create Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"row\",\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border border-top-0\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n};\n\n_s(List, \"d1O9d/Lp782+kWi0T+t1GdpGgoU=\", false, function () {\n  return [useHistory];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/rimaatwork/Desktop/qualified-projects/Project_Flashcards_Qualified_1/src/Layout/DeckList.js"],"names":["React","useState","useEffect","deleteDeck","listDecks","Link","useHistory","ErrorMessage","List","history","decks","setDecks","error","setError","undefined","abortController","AbortController","getData","data","signal","err","abort","list","map","deck","name","cards","length","description","id","result","window","confirm","then","push"],"mappings":"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","sourcesContent":["//This component is rendered in the Home.js file\n//Show list of decks with options to create, study, view, or delete a deck\n//Existing decks are each shown with the deck name, the number of cards, and a “Study,” “View,” and “Delete” button.\n//useEffect hook will fire a function after every render and will allow us to fetch data\n//A dependency array can be passed into the useEffect as a second argument to make sure that the function only rns once on the first render\n//Clicking the “Study” button brings the user to the Study screen.\n//Clicking the “Edit” button brings the user to the Edit Deck screen.\n//Clicking the “Delete” button shows a warning message before deleting the deck.\n//The user can click \"OK\" or \"Cancel\". If the user clicks \"OK\", the deck is deleted and the deleted deck is no longer visible on the Home screen.\n//use useEffect hook to make an API call from a React component\n\nimport React, { useState, useEffect } from \"react\";\nimport { deleteDeck, listDecks } from \"../utils/api\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nexport const List = () => {\n\tconst history = useHistory();\n\n\tconst [decks, setDecks] = useState([]);\n\tconst [error, setError] = useState(undefined);\n\n\tuseEffect(() => {\n\t\tconst abortController = new AbortController();\n\t\tasync function getData() {\n\t\t\ttry {\n\t\t\t\tlet data = await listDecks(abortController.signal);\n\n\t\t\t\tsetDecks(data);\n\t\t\t} catch (err) {\n\t\t\t\tsetError(err);\n\t\t\t}\n\t\t}\n\t\tgetData();\n\t\treturn () => abortController.abort();\n\t}, []);\n\n\tif (error) {\n\t\treturn <ErrorMessage error={error} />;\n\t}\n\tif (decks) {\n\t\tconst list = decks.map((deck) => {\n\t\t\treturn (\n\t\t\t\t<div key={deck.id} className=\"card col-md-10\">\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-8\">\n\t\t\t\t\t\t\t\t<h5 className=\"card-title\">{deck.name}</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-4\">\n\t\t\t\t\t\t\t\t<p className=\"text-end\">{`${deck.cards.length} cards`}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className=\"card-text\">{deck.description}</p>\n\n\t\t\t\t\t\t<Link to={`/decks/${deck.id}`} className=\"btn btn-secondary mr-2\">\n\t\t\t\t\t\t\tView\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t<Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary mr-2\">\n\t\t\t\t\t\t\tStudy\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\n\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\tconst result = window.confirm(\n\t\t\t\t\t\t\t\t\t\"Delete this deck? \\nYou will not be able to recover it.\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\t\t\tdeleteDeck(deck.id).then(history.push(\"/\"));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<main className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"decks/new\" className=\"btn btn-secondary m-3\">\n\t\t\t\t\t\tCreate Deck\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<section className=\"row\">{list}</section>{/*list holds the results of our map to each deck */}\n\t\t\t</main>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"p-4 border border-top-0\">\n\t\t\t<p>Loading...</p>\n\t\t</div>\n\t);\n};\nexport default List;\n"]},"metadata":{},"sourceType":"module"}